openapi: 3.0.0

servers:
  - url: 'https://api-cert.groupe-psa.com/connectedcar/v2'
security:
  - BasicAuth: []
    ClientId: []
info:
  version: '2.2.0'
  title: Groupe PSA Connected Car B2B API
  description: |
    *Business Partner Connected Fleet API*  
    
 
    # Introduction

    This is the description of the *Groupe PSA Connected Car V2 B2B API*. 
    This specification is written in **OpenAPI Specification version 3** and can
    be displayed using [ReDoc](https://github.com/Rebilly/ReDoc) or
    [Swagger](http://swagger.io).
      This REST API allows  applications to fetch data from the connected Vehicles data  platform.
    
    ---
    
    # Authentication

    PSA Connected Car B2B APIs uses the [HTTPS Authentication](https://tools.ietf.org/html/rfc7235) (with provided PSA SSL Certificate) to access to fleet vehicles data.
    
    
    ---
    
    # Paging:
      To make this necessary feature easy to use when retrieving a collection of results, this API uses a token (computed and interpreted by the server only) as a context that contains all necessary information allowing the navigation through pages. 
      Token acts as an ```HTTP COOKIE``` on the client-side, so the server does not keep any cache or session settings to continue paging and keep all request stateless.
          
    ---
        
    # Errors:
      Error codes returned by all APIs comply with the standard. Nevertheless, PSA Services (callers) need to have more detailed data structures (even when the answer is not Http-OK) to better categorize the type of error by providing application code, message and debugging code(for investigation purposes). The HTTP code of the response is managed by the protocol itself (in the header).
        
    ### These APIS are likely to report the following HTTP code:
    
    | <b>Code</b>  | <b>Description</b>  |  <b>Case</b> |  
    |---|---|---|
    | 200  |<i>The request has succeeded and the resource data has been sent.</i>|GET APIs.  |
    | 202  |<i>The request has been accepted for processing, but not yet acted upon. An id of processing is returned.</i>|POST/PUT requests:<br>Create monitor callback.| 
    | 204  |<i>The request has been accepted and there is no additional content</i>|DELTE APIs:<br>Delete monitor callback.|
    |400|<i>Request cannot be processed due to invalid query parameter value of body content (for POST/PUT verbs)</i>|ALL APIs.|
    |401|<i>Unauthorized request due to lack of valid authentication credentials.</i>|All APIs.|
    |403|<i>Unauthorized request due to insufficient credentials to grant access.</i>|All APIs.|
    |404|<i>Target resource not found.|All APIs. Even POST, PUT or DELETE if the resource id is unknown.</i>|
    |500|<i>Unexpected condition that prevented from fulfilling the request.</i>|All APIs.|


      
      **Errors are  returned as a generic error response:**
       * See ```ErrorCodeDefaultResponse``` model.
       
    ---
    
       
    # API output:
      ## Data format
      
      **All APIs return data in JSON format. The application who uses them must take into account the evolving character of them and more precisely regarding the schemas of the exposed data. Indeed:**
      
      *  The missing of known data fields should not cause an error. 
      *  It should (correctly)  deal with JSON content with unknown properties also. Indeed, data schema extensions should be supported without errors even if they are not used. 
        
      
      **for example:**
      
      Assuming a given exposed resource with this data schema:
        
          
           data:
            type: object
            description: Data model
            properties:
              field1:
                type: string
              field2:
                type: number
             
      The application should be able to deal with those possible valid JSON contents:
        
      > All fields:
        ```{
          "field1":"value1",
          "field2": 1
        }```
        
      > Missing field2:
        ```{
          "field1":"value1"
        }```        

      > Unknow  field3:
        ```{
          "field1":"value1",
          "field3": 2.5
        }```
      
     
    ---  
  license:
    name: Groupe PSA Licence
    url: 'https://www.psa-peugeot-citroen.com/'
tags:
  - name: Fleet
    description: To retreive Fleet details and access resources in **batch mode** (without vehicle or trip filtering).
  - name: Vehicles
    description: Access to Vehicles details.
  - name: Trips
    description: Describe Trips of a Fleet or Vehicle
  - name: Monitors
    description: Vehicles monitors.

paths:
  /fleets:
    get:
      tags:
        - Fleet
      summary: Fleets owned by a partner
      description: Returns all Fleets owned by a partner. 
      operationId: getFleets
      parameters:
        
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
      responses:
        200:
           $ref: '#/components/responses/FleetsSuccessResponse'
        default:
          description: Fleet not found
          $ref: '#/x-fragment/general_error_fragment'

  /fleets/{fid}:
    get:
      tags:
        - Fleet
      summary: Fleet's information
      description: Returns the Fleet's information. 
      operationId: getFleet
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
      responses:
        200:
          $ref: '#/components/responses/FleetSuccessResponse'
        default:
          description: Fleet not found
          $ref: '#/x-fragment/general_error_fragment'
 
  /fleets/{fid}/vehicles:
    get:
      tags:
        - Vehicles
      summary: List of vehicles
      description: Returns the Vehicles associated with the Fleet.
      operationId: getVehiclesByDevice
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/locale'
        - $ref: '#/components/parameters/vinPrefix'
      responses:
        200:
          description: OK
          content:
            'application/hal+json ':
              schema:
                $ref: '#/components/schemas/Vehicles'
        default:
          description: Vehicle not found
          $ref: '#/x-fragment/general_error_fragment'
    
  '/fleets/{fid}/vehicles/{vid}':
    get:
      tags:
        - Vehicles
      summary: Details of a vehicle.
      description: Returns detailed information about a Vehicle.
      operationId: getVehicleByid
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/locale'
   
      responses:
        200:
          description: OK
          content:
            'application/hal+json ':
              schema:
                allOf:
                  - $ref: '#/components/schemas/VehicleLabel'
                  - $ref: '#/components/schemas/Vehicle'
        default:
          description: Vehicle not found
          $ref: '#/x-fragment/general_error_fragment'
  
  '/fleets/{fid}/vehicles/{vid}/lastPosition':
    get:
      tags:
        - Vehicles
      summary: Last position identified
      description: Returns the latest GPS Position of the Vehicle.
      operationId: getCarLastPosition
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/vehicleId'
        
      responses:
        200:
          description: Position response
          content:
            application/vnd.geo+json:
              schema:
                $ref: '#/components/schemas/Position'
        default:
          description: Vehicle not found
          $ref: '#/x-fragment/general_error_fragment'
          
          
  '/fleets/{fid}/vehicles/{vid}/maintenance':
    get:
      tags:
        - Vehicles
      summary: Maintenance details of a vehicle.
      description: Returns the latest Maintenance information for a Vehicle.
      operationId: getVehicleMaintenance
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/vehicleId'
        
      responses:
        200:
          description: Maintenant response
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Maintenance'
        default: 
          $ref: '#/x-fragment/general_error_fragment'
  
  '/fleets/{fid}/status':
    get:
      tags:
        - Fleet
      description: Returns the latest vehicles' status of a given fleet. HyperLink (HAL) resolutions of resources within the returned collection are associate to vehicle. 
      summary: Fleet Vehicles status.
      operationId: getFleetStatusList
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/statusExtension'
      responses:
        200:
          $ref: '#/components/responses/StatusSuccessResponses'
        default:
          $ref: '#/x-fragment/general_error_fragment'
          
  '/fleets/{fid}/maintenances':
    get:
      tags:
        - Fleet
      description: Returns the latest vehicles' maintenance information of a given fleet. HyperLink (HAL) resolutions of resources within the returned collection are associate to vehicle. 
      summary: Fleet Vehicles maintenances.
      operationId: getFleetMantenanceList
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
      responses:
        200:
          $ref: '#/components/responses/MaintenanceSuccessResponses'
        default:
          $ref: '#/x-fragment/general_error_fragment'  
          
  '/fleets/{fid}/alerts':
    get:
      tags:
        - Fleet
      description: Returns vehicles' alerts list of a given fleet. HyperLink (HAL) resolutions of resources within the returned collection are associate to vehicle. 
      summary: Fleet Vehicles alerts.
      operationId: getFleetAlertList
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
      responses:
        200:
          $ref: '#/components/responses/AlertsuccessResponses'
        default:
          $ref: '#/x-fragment/general_error_fragment'
  
  '/fleets/{fid}/alerts/{aid}':
    get:
      tags:
        - Fleet
      description: Returns information about a specific alert message for a given fleet. 
      summary: Fleet single alert.
      operationId: getFleetAlertById
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        
        - $ref: '#/components/parameters/alertId'        
      responses:
        200:
          $ref: '#/components/responses/AlertsuccessResponse'
        default:
          $ref: '#/components/responses/AlertFailedResponse'

  #'/fleets/{fid}/telemetries':
   # get:
    #  tags:
    #    - Fleet
    #  summary: Telemetry list of the fleet.
    #  description: Returns vehicles' telemetry list of a given fleet that occurred during a selective timestamp-ranges and bounded by an index range.
    #  operationId: getFleetTelemetriesList
    #  parameters:
        
    #    - $ref: '#/components/parameters/fleetId'
        
        
    #    - $ref: '#/components/parameters/timestamps'
    #    - $ref: '#/components/parameters/indexRange'
    #    - $ref: '#/components/parameters/pageSize'
    #    - $ref: '#/components/parameters/pageToken'
    #    - $ref: '#/components/parameters/locale'
    #    - $ref: '#/components/parameters/telemetryExtension'
    #  responses:
    #    200:
    #      $ref: '#/components/responses/TelemetrySuccessResponse'
    #    default:
    #      $ref: '#/components/responses/TelemetryFailedResponse'
   
          
  #'/fleets/{fid}/alerts/{aid}':
  #  get:
  #    tags:
  #      - Fleet
  ##    description: Returns the vehicles alert message 
  #    summary: Fleet Vehicles alert.
  #    operationId: getFleetAlerById
  #    parameters:
  #      - $ref: '#/components/parameters/fleetId'
  #      - $ref: '#/components/parameters/alertId'
  #    responses:
  #      200:
  #        $ref: '#/components/responses/AlertsuccessResponses'
  #      default:
  #        $ref: '#/x-fragment/general_error_fragment'          
 
          
  '/fleets/{fid}/vehicles/{vid}/status':
    get:
      tags:
        - Vehicles
      description: Returns the latest vehicle status.
      summary: Vehicle status.
      operationId: getFleetVehicleStatus
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/statusExtension'
      responses:
        200:
          description: Status response
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Status'
        default:
          $ref: '#/x-fragment/general_error_fragment'          
          
  '/fleets/{fid}/vehicles/{vid}/alerts':
    get:
      tags:
        - Vehicles
      summary: Alerts related to a vehicle.
      description: Returns the latest alert messages for a Vehicle.
      operationId: getVehicleAlerts
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/vehicleId'
        
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
      responses:
        200:
          $ref: '#/components/responses/AlertsuccessResponses'
        default:
          $ref: '#/components/responses/AlertFailedResponse'
          
  '/fleets/{fid}/vehicles/{vid}/alerts/{aid}':
    get:
      tags:
        - Vehicles
      summary: An alert related to a vehicle.
      description: Returns information about a specific alert messages for a Vehicle.
      operationId: getFleetVehicleAlertsById
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/vehicleId'
        
        - $ref: '#/components/parameters/alertId'
      responses:
        200:
          $ref: '#/components/responses/AlertsuccessResponse'
        default:
          $ref: '#/components/responses/AlertFailedResponse'
          
  '/fleets/{fid}/vehicles/{vid}/telemetry':
    get:
      tags:
        - Vehicles
      summary: Telemetry of vehicle
      description: >-
        Returns the latest Telemetry messages that occurred during a selective timestamp-ranges and bounded by an index range.
      operationId: getTelemetry
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/telemetryType'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSizeHighFrequency'
        - $ref: '#/components/parameters/pageToken'
        
        - $ref: '#/components/parameters/telemetryExtension'
      responses:
        200:
          $ref: '#/components/responses/TelemetrySuccessResponse'
        default:
          $ref: '#/components/responses/TelemetryFailedResponse'
          
  '/fleets/{fid}/monitors':
    get:
      tags:
        - Monitors
      summary: Get all monitors of the fleet.
      description: Returns the list of subscribed Monitors of the fleet.
      operationId: getFleetMonitors
      parameters:
        
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/fleetId'
          
      responses:
        200:
          $ref: '#/components/responses/MonitorsuccessResponses'
        default:
          $ref: '#/components/responses/MonitorFailedResponse'
    post:
      tags:
        - Monitors
      summary: Create a new Monitor.
      description: |
                    >Create a Monitor for all Vehicles of the fleet. This is a kind of vehicle monitor that generates an event following the transition state of one of the (monitored) data  of the vehicles. As for example the fuel level, the moving out of a defined geographical area. 
                    
                    >When the trigger occurs, the built event expressed as a JSON object will be sent over the subscribed callback.
      operationId: createFleetVehicleMonitor
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/MonitorParameter'
                #DataMonitorParm
      responses: 
        202:
          $ref: '#/components/responses/MonitorsuccessPostResponse'
        default:
          $ref: '#/components/responses/MonitorFailedResponse'
          
  '/fleets/{fid}/monitors/{mid}':
    
    get:
      tags:
        - Monitors
      description: Returns information about a specific Monitor for a given fleet.
      summary: Get the monitor by monitor Id.
      operationId: getFleetMonitorsStatusById
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/monitorId'
      responses:
        200:
          $ref: '#/components/responses/MonitorsuccessResponse'
        default:
          $ref: '#/components/responses/MonitorFailedResponse'
    delete:
      tags:
        - Monitors
      summary: Delete an existing Monitor.
      description: Stop (disable) an existing Monitor.
      operationId: deleteFleetMonitor
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/monitorId'
      responses:
        204:
          description: Monitor deleted (the response does not include an entity).
        '400':
          description: Invalid ID supplied
        '404':
          description: Monitor not found
 
  '/fleets/{fid}/monitors/{mid}/status': 
    put:
      x-available: true
      tags:
        - Monitors
      summary: Set a new monitor status.
      description: |
                   Set monitor status. 
      operationId: setFleetVehicleMonitorStatus
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/monitorId'
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/MonitorStatusSetter'
      responses: #MonitorId
        202:
          $ref: '#/components/responses/MonitorsuccessPostResponse'
        default:
          $ref: '#/components/responses/MonitorFailedResponse'
  
  '/fleets/{fid}/vehicles/{vid}/trips':
    get:
      tags:
        - Trips
      description: >-
        This method returns a list of all Trips that a given Vehicle has taken.
        This will NOT include Trips that have not yet been completed.
      operationId: getTripsByVehicle
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/vehicleId'
        
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
      responses:
        200:
          $ref: '#/components/responses/TripsSuccessResponses'
        default:
          $ref: '#/components/responses/TripFailedResponse'

  '/fleets/{fid}/trips':
    get:
      summary: Trips of all vehicles of the fleet. 
      tags:
        - Fleet
      description: Returns vehicles' trips list of a given fleet.
      operationId: getFleetTrips
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
      responses:
        200:
          $ref: '#/components/responses/TripsSuccessResponses'
        default:
          $ref: '#/components/responses/TripFailedResponse'
  


  '/fleets/{fid}/trips/{tid}':
    get:
      tags:
        - Trips
      description: >-
        Gives the Trip that matches the Trip id (tid).
      operationId: getFleetTripsById
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/tripId'
        
      responses:
        200:
          $ref: '#/components/responses/TripsuccessResponse'
        default:
          $ref: '#/components/responses/TripFailedResponse'

  '/fleets/{fid}/vehicles/{vid}/trips/{tid}':
    get:
      tags:
        - Trips
      description: >-
        This method returns the Trip that matches the Trip id (tid) a given
        Vehicle (id) has taken.
      operationId: getFleetTripByVehicle
      parameters:
        
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/fleetId'
        
      responses:
        200:
          $ref: '#/components/responses/TripsuccessResponse'
        default:
          $ref: '#/components/responses/TripFailedResponse'

  '/fleets/{fid}/trips/{tid}/alerts':
    get:
      tags:
        - Trips
      description: >-
        Returns the alert message list for a given trip.
      operationId: getFleetTripAlerts
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
        

      responses:
        200:
          $ref: '#/components/responses/AlertsuccessResponses'
        default:
          $ref: '#/components/responses/AlertFailedResponse'  

  '/fleets/{fid}/vehicles/{vid}/trips/{tid}/alerts':
    get:
      tags:
        - Trips
      description: >-
        Returns the alert message list for a given vehicle.
      operationId: getFleetTripAlertByVehicle
      parameters:
        
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSize'
        - $ref: '#/components/parameters/pageToken'
        

      responses:
        200:
          $ref: '#/components/responses/AlertsuccessResponses'
        default:
          $ref: '#/components/responses/AlertFailedResponse'
  

  '/fleets/{fid}/vehicles/{vid}/trips/{tid}/alerts/{aid}':
    get:
      tags:
        - Trips
      description: >-
        Returns the alert message list for a given vehicle that occure during a trip.
      operationId: getFleetTripAlertByVehicleById
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/alertId'
        

      responses:
        200:
          $ref: '#/components/responses/AlertsuccessResponse'
        default:
          $ref: '#/components/responses/AlertFailedResponse'  
    
  '/fleets/{fid}/trips/{tid}/alerts/{aid}':
    get:
      tags:
        - Trips
      description: >-
        Returns the alert message for a given trip.
      operationId: getFleetTripAlertById
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/alertId'
        

      responses:
        200:
          $ref: '#/components/responses/AlertsuccessResponse'
        default:
          $ref: '#/components/responses/AlertFailedResponse'   
    
  '/fleets/{fid}/trips/{tid}/wayPoints':
    get:
      tags:
        - Trips
      description: Gives the wayPoints for a specified Fleet Trip.
      operationId: getPathForATrip
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/pageSizeHighFrequency'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/tolerence'
        
      responses:
        200:
          description: Path response
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WayPoints'
        default:
          description: wayPoints not found
  
  '/fleets/{fid}/vehicles/{vid}/trips/{tid}/wayPoints':
    get:
      tags:
        - Trips
      description: Gives the Vehicle's wayPoints for a specified Trip.
      operationId: getPathForTrip
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/pageSizeHighFrequency'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/tolerence'
        
        
      responses:
        200:
          description: Path response
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/WayPoints'
        default:
          description: wayPoints not found

  '/fleets/{fid}/trips/{tid}/telemetry':
    get:
      summary: Telemetries for of a trip
      tags:
        - Trips
      description: >-
        Returns the set of Telemetry values that occurred for a  speific Trip (tid) during the timestamp ranges and bounded by
        an index range.
      operationId: getFleetTelemetryForTrip
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSizeHighFrequency'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/telemetryType'
        
        - $ref: '#/components/parameters/telemetryExtension'
      responses:
        200:
          $ref: '#/components/responses/TelemetrySuccessResponse'
        default:
          $ref: '#/components/responses/TelemetryFailedResponse' 
  
  '/fleets/{fid}/vehicles/{vid}/trips/{tid}/telemetry':
    get:
      summary: Telemetry for vehicle and trip
      tags:
        - Trips
      description: >-
        Returns the set of Telemetry values that occurred for a given vehicle
        (id) and a speific Trip (tid) during the timestamp ranges and bounded by
        an index range.
      operationId: getTelemetryForTripByVehicle
      parameters:
        
        - $ref: '#/components/parameters/fleetId'
        - $ref: '#/components/parameters/vehicleId'
        - $ref: '#/components/parameters/tripId'
        - $ref: '#/components/parameters/timestamps'
        - $ref: '#/components/parameters/indexRange'
        - $ref: '#/components/parameters/pageSizeHighFrequency'
        - $ref: '#/components/parameters/pageToken'
        - $ref: '#/components/parameters/telemetryExtension'
        - $ref: '#/components/parameters/telemetryType'
      responses:
        200:
          $ref: '#/components/responses/TelemetrySuccessResponse'
        default:
          $ref: '#/components/responses/TelemetryFailedResponse'
  
  '/fleets/{fid}/vehicles/{vid}/collisions':
     get:
        tags:
            - Vehicles
        summary: Collisions of a vehicle.
        description: >-
            Returns the list of Collisions that occurred for a given vehicle (id)
            during the timestamp ranges and bounded by an index range.
        operationId: getVehicleCollision
        parameters:

            - $ref: '#/components/parameters/fleetId'
            - $ref: '#/components/parameters/vehicleId'
            - $ref: '#/components/parameters/timestamps'
            - $ref: '#/components/parameters/indexRange'
            - $ref: '#/components/parameters/pageSize'
            - $ref: '#/components/parameters/pageToken'
        responses:
            200:
                $ref: '#/components/responses/CollisionsSuccessResponse'
            default:
                $ref: '#/components/responses/CollisionFailedResponse'
          
  '/fleets/{fid}/vehicles/{vid}/collisions/{cid}':
    get:
     tags:
       - Vehicles
     summary: An identified collision that occurred on a vehicle.
     description: Returns the Collision that matches the vehicle id and the Collision cid.
     operationId: getVehicleCollisionById
     parameters:

       - $ref: '#/components/parameters/fleetId'
       - $ref: '#/components/parameters/vehicleId'
       - $ref: '#/components/parameters/collisionId'
     responses:
       200:
         $ref: '#/components/responses/CollisionsuccessResponse'
       default:
         $ref: '#/components/responses/CollisionFailedResponse'
         
  '/fleets/{fid}/trips/{tid}/collisions':
    get:
     tags:
       - Trips
     summary: Trip's collisions of fleet. 
     description: >-
       Returns the list of Collisions that occurred during a trip and bounded (optional) by a timestamp ranges and an index range.
     operationId: getTripCollisionsByTrip
     parameters:
       
       - $ref: '#/components/parameters/fleetId'
       - $ref: '#/components/parameters/pageToken'
       - $ref: '#/components/parameters/tripId'
       - $ref: '#/components/parameters/timestamps'
       - $ref: '#/components/parameters/indexRange'
       - $ref: '#/components/parameters/pageSize'
     responses:
       '200':
         $ref: '#/components/responses/CollisionsSuccessResponse'
       default:
         $ref: '#/components/responses/CollisionFailedResponse'

  '/fleets/{fid}/vehicles/{vid}/trips/{tid}/collisions':
    get:
     tags:
       - Trips
     summary: Trip's collisions of vehicle. 
     description: >-
       Returns the list of Collisions of a vehicle that occurred during a trip and bounded (optional) by a timestamp ranges and an index range.
     operationId: getTripCollisionsByTripAndVehicle
     parameters:

       - $ref: '#/components/parameters/vehicleId'
       - $ref: '#/components/parameters/fleetId'
       - $ref: '#/components/parameters/pageToken'
       - $ref: '#/components/parameters/tripId'
       - $ref: '#/components/parameters/timestamps'
       - $ref: '#/components/parameters/indexRange'
       - $ref: '#/components/parameters/pageSize'
     responses:
       '200':
         $ref: '#/components/responses/CollisionsSuccessResponse'
       default:
         $ref: '#/components/responses/CollisionFailedResponse'           
         
  '/fleets/{fid}/collisions':
    get:
     tags:
       - Fleet
     summary: Collisions of all vehicles' fleet.
     description: >-
       Returns the list of Collisions that occured on vehicles' fleet. HyperLink (HAL) resolutions of resources within the returned collection are associate to vehicle. 
     operationId: getFleetTripCollisions
     parameters:

       - $ref: '#/components/parameters/fleetId'
       - $ref: '#/components/parameters/pageToken'
       - $ref: '#/components/parameters/timestamps'
       - $ref: '#/components/parameters/indexRange'
       - $ref: '#/components/parameters/pageSize'      
     responses:
       '200':
         $ref: '#/components/responses/CollisionsSuccessResponse'
       default:
         $ref: '#/components/responses/CollisionFailedResponse'
         
  '/fleets/{fid}/collisions/{cid}':    
    get:
     tags:
       - Fleet
     summary: An identified collision that occurred on a fleet.
     description: >-
      # Returns the Collision that matches the fleet id and the Collision cid. 
     operationId: getCollisionsById
     parameters:

       - $ref: '#/components/parameters/fleetId'
       - $ref: '#/components/parameters/collisionId'      
     responses:
       '200':
         $ref: '#/components/responses/CollisionsuccessResponse'
       default:
         $ref: '#/components/responses/CollisionFailedResponse' 

components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    ClientId:
      name: client_id
      type: apiKey
      in: query
  schemas: 
    Vin:  
          description: Identifier of a vehicle. **Set when retrieving resource in batch mode**.   
          type: string
    
    TimeStamped:
      properties:
        createdAt:
              type: string
              format: date-time
    
    Alert:
      allOf:
        - $ref: '#/components/schemas/TimeStamped'
        - title: Alert message
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  $ref: '#/components/schemas/Link'
                vehicle:
                  $ref: '#/components/schemas/Link'
                position:
                  $ref: '#/components/schemas/Link'
                trips:
                  $ref: '#/components/schemas/Link'
            id:
              type: string
            vin:
              $ref: '#/components/schemas/Vin'
            active:
              type: boolean
            type:
              $ref: '#/components/schemas/AlertMsgEnum'
            severity:
              description: |
                            Alert severity level.
                            
                            |Severity|Description|
                            |:---|:---|
                            |Information|Better to fix but it is operating accurately.|
                            |Warning|Should fix it asap.|
                            |Critical|Starting prohibited without repair.|                           
              type: string
              enum: [Information, Warning, Critical]
            updatedAt:
              type: string
              format: date-time
            startedAt:
              type: string
              format: date-time
            endAt:
              type: string
              format: date-time
            startPosition:
              allOf:
                - $ref: '#/components/schemas/Position'
                - description: The position (last vehicle known one) where the alert disappear.
            endPosition:
              allOf:
                - $ref: '#/components/schemas/Position'
                - description: The position (last vehicle known one) where the alert occurs. 
          required: [ id,active,type,updatedAt,startedAt]
        
    MonitorStatus:
      type: string
      enum: [Running, Paused, Failed]
      
    Monitor:
      allOf:
        - $ref: '#/components/schemas/TimeStamped'
        - title: Monitor
          description: Monitor state object
          type: object
          properties:
            updatedAt:
              type: string
              format: date-time      
            _links:
              type: object
              properties:
                self:
                  $ref: '#/components/schemas/Link'
                fleet:
                  $ref: '#/components/schemas/Link'
            monitorId:
              $ref: '#/components/schemas/MonitorId'
            monitor:
              $ref: '#/components/schemas/MonitorParameter'
            status:
              $ref: '#/components/schemas/MonitorStatus'
          required: [status, monitorId, monitor, createdAt,updatedAt]
      
    ECoaching:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            vehicle:
              $ref: '#/components/schemas/Link'
            trip:
              $ref: '#/components/schemas/Link'
       
        scores:
          type: array
          items:
              type: object
              properties:
                category:
                  type: string
                  description: category of the score. Global, ACCELERATION, BREAKING, A/C system, Runing cold engine, Direct Shift Gear, Speed, STT system, ZEV (Zero emission vehicle).
                  enum: [Global, Acceleration, Break, AirCondioner, ColdEngine, TirePressure, Slope, Speed, StartStop]
                score:
                  type: number
                  format: int
                  minimum: 0
                  maximum: 10
       
        _embedded:
          type: object
  
    MonitorId:
      type: string
      description: Uniq monitor ID returned when the monitor was created succefully.
  
    MaintenanceObj:
     allOf:
        - $ref: '#/components/schemas/TimeStamped'
        - description: Expresses next Maintenance details. Such as number of days and the mileage until the next Maintenance. The value is negative if the next maintenance (day or mileage) is already passed.
          type: object
          title: Maintenance
          properties:
            daysBeforeMaintenance:
              type: integer
            mileageBeforeMaintenance:
              type: integer
            updatedAt:
              type: string
              format: date-time
          required: [daysBeforeMaintenance,mileageBeforeMaintenance,updatedAt]
             
    Maintenance:
      allOf:
          - $ref: '#/components/schemas/MaintenanceObj'
          - title: Maintenance response
            properties:
              _links:
                type: object
                properties:
                  self:
                    $ref: '#/components/schemas/Link'
                  vehicle:
                    $ref: '#/components/schemas/Link'
                  alerts:
                    $ref: '#/components/schemas/Link'
              
              
            required:
              - _links
    
    Ignition:
        type: object
        properties:
          type:
              type: string
              enum: [Stop, StartUp, Start, Free]
          createdAt:
              type: string
              format: date-time
        required: [type,createdAt]      
   
    VehicleOdometer:
        type: object
        properties:
          createdAt:
                type: string
                format: date-time
          mileage:
                description: Vehicle mileage expressed in KM.
                type: number
                format: float
              
    Battery:
              description: Describe the car (with combustion engine)  battery status.
              type: object
              properties:
                voltage:
                  type: number
                  description: Auxiliary battery (12V) state of health in %
                  format: float
                createdAt:
                  type: string
                  format: date-time
              
    Safety:  
                type: object
                properties:
                  beltWarning:
                    type: string
                    enum: [Normal, Omission]
                  eCallTriggeringRequest:
                    deprecated: true
                    type: string
                    enum: [AirbagUnabled, NoRequest, Requested]        
                  autoECallTriggering:
                    type: string
                    enum: [NotDetected, Detected]  
       
    
    ServiceType:
                type: object
                properties:
                  updatedAt:
                    type: string
                    format: date-time
                  type:
                    type: string
                    enum: [Electric, Hybrid, Unknown]
    
    DoorsState:
        allOf:
          - properties:
              updatedAt:
                    type: string
                    format: date-time        
          - type: object
            properties:
                lockedState:
                  type: string
                  enum: [Unlocked, Locked, SuperLocked, DriverDoorUnlocked, CabinDoorsUnlocked, CargoDoorsLocked, CargoDoorsUnlocked, RearDoorsUnlocked, RearDoorsLocked, TrunkLocked, TrunkUnLocked]
                opening:
                  type: array
                  items:
                    type: object
                    description: Opening state per door.
                    properties :
                      identifier: 
                        type: string
                        enum: [Driver, Passenger, RearLeft, RearRight, Trunk, RearWindow, RoofWindow]
                      state:
                        type: string
                        enum: [Open, Closed]
          
    Status:
      allOf:
        - $ref: '#/components/schemas/TimeStamped'
        - title: Vehicle status response
          description: Describe the latest status of the vehicle
          type: object
          properties:
            _links:
              type: object
              properties:
                self:
                  $ref: '#/components/schemas/Link'
                vehicle:
                  $ref: '#/components/schemas/Link'
                fleet:
                  $ref: '#/components/schemas/Link'
            vin:  
                 $ref: '#/components/schemas/Vin'
            ignition:
                  $ref: '#/components/schemas/Ignition'
            lastPosition:
                  $ref: '#/components/schemas/Position'
            preconditioning:
                  $ref: '#/components/schemas/Preconditioning'
            energies:
              type: array
              items:
                $ref: '#/components/schemas/Energy'
            engines:
              type: array
              items:
                $ref: '#/components/schemas/Engine'
            doorsState:
                  $ref: '#/components/schemas/DoorsState'
            privacy:
                  $ref: '#/components/schemas/Privacy'
            battery:
                  $ref: '#/components/schemas/Battery'
            service:
                  $ref: '#/components/schemas/ServiceType'
            safety:  
                  $ref: '#/components/schemas/Safety'
            odometer: 
                  $ref: '#/components/schemas/VehicleOdometer'
            kinetic :
                  $ref: '#/components/schemas/Kinetic'
            environment: 
                  $ref: '#/components/schemas/Environment'
            drivingBehavior:
                  description: Describe the behavior of the driver
                  allOf:
                    - $ref: '#/components/schemas/UpdatedAtField'
                    - $ref: '#/components/schemas/DrivingBehaviorBase'
            _embedded:
              type: object
              properties:
                extension:
                  $ref: '#/components/schemas/Extension'
          required:
            - _links
        
    Privacy:
                  type: object
                  properties:
                    createdAt:
                      type: string
                      format: date-time
                    state:
                      type: string
                      description: Depracted, use driverRequestState and serviceState instead
                      deprecated: true
                      enum: [None, Geolocation, Full]
                    driverRequestState:
                      type: string
                      description: Privacy selected by the driver. Partners are responsible of the end-user data access when it do not match the partner privacy (serviceState). 
                      enum: [None, Geolocation, Full]
                    serviceState:
                      type: string
                      description: Privacy of the partner used to restitute all services. Partners are responsible of the end-user data access when it do not match the driver privacy (driverRequestState). 
                      enum: [None, Geolocation, Full]
                      
    Geometry:
      title: Geometry
      type: object
      description: >-
        This object expresses the Geometry as specified by
        [rfc7946](https://tools.ietf.org/html/rfc7946#section-3.1). It is also
        the root of the Geometry objects (Point, cicle, poygon)
      properties:
        coordinates:
          title: Coordinates
          description: Geometry coordinates
      externalDocs:
        url: 'https://tools.ietf.org/html/rfc7946#section-3.1'
      required:
        - coordinates
        - type
        
    Point:
      allOf:
        - $ref: '#/components/schemas/Geometry'
        - title: Point
        - description: >-
            This object expresses the Geometry as specified by
            [rfc7946](https://tools.ietf.org/html/rfc7946#section-3.1). It is also
            the root of the Geometry objects (Point, cicle, poygon)
          required: [type,coordinates]
          properties:
            type:
              type: string
              default: Point
              enum:
                - Point
            coordinates:
              description: >-
                This is a simple 2 (or more) number vector used to define Geometry
                objects.
              type: array
              items:
                type: number
                format: float
                minItems: 2
                  
    Position:
      allOf:
        - required:
            - geometry
            - properties
            - type
          type: object
          title: Position
          properties:
            type:
              type: string
              default: Feature
              enum:
                - Feature
            geometry:
              $ref: '#/components/schemas/Point'
            properties:
              type: object
              properties:
                vin:
                  $ref: '#/components/schemas/Vin'
                updatedAt:
                  type: string
                  format: date-time
                createdAt:
                  type: string
                  format: date-time
                heading:
                  type: number
                  format: float
                  minimum: 0
                  maximum: 360
                signalQuality:
                    type: number
                    format: int
                type:
                  type: string
                  enum:
                    - Estimated
                    - Acquire
    
    Energy:
      description: Describe vehicle energy supply for thermic, low emission vehicle or both.
      type: object
      properties :
        updatedAt:
          type: string
          format: date-time
        type:
          type: string
          enum: [Fuel, Electric, Hydrogen]
        level:
          type: number
          format: float
          description: Percentage of remaining energy (Fuel or electric) level. Expressed with a precision of 0.1%.
          minimum: 0
          maximum: 100
        autonomy:
          description: Vehicle autonomy expressed in km for this energy class.
          type: integer
        extension:
          type: object
          properties:
            fuel:
              description: Specific fuel energy properties.
              type: object
              properties:
                 consumption:
                     $ref: '#/components/schemas/FuelEnergyConsumption'
            electric:
              description: Specific electric energy parameters.
              type: object
              properties:
                residual:
                   $ref: '#/components/schemas/ElectricResidualEnergy'
                battery:
                  $ref: '#/components/schemas/EnergyBattery'
                charging:
                  $ref: '#/components/schemas/EnergyCharging'

    
    FuelEnergyConsumption:
              description: Total consumption for vehicles for thermic vehicle. Expressed in cL.
              type: number
              format: float
              minimum: 0
              
    ElectricResidualEnergy:
                  description: Residual electric energy (Wh)
                  type: number
                  format: float
                  
    EnergyCharging:
                  type: object
                  description: Electric battery capacity and heath
                  required: [status]
                  properties:
                    plugged:
                      type: boolean
                    status:
                      $ref: '#/components/schemas/ChargingStatusEnum'
                    remainingTime:
                      description: Remaning time before the battery is fully charged. This duration is expressed using [ISO8601](https://en.wikipedia.org/wiki/ISO_8601#Durations) format.
                      type: string
                    chargingRate:
                      description:  Charging speed (expressed in gained batteryLife per hour -> KM/H).
                      type: integer
                      minimum: 0
                      maximum: 500
                    chargingMode:
                        description:  The charging mode; Slow, Quick and No(not charging).
                        type: string
                        enum: [ No, Slow, Quick ]
                    nextDelayedTime:
                      description:  Duration (as defined in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt)) until the next battery charging.
                      type: string
                      
    EnergyBattery:
              
              type: object
              description: Electric charging state.
              properties:
                capacity:
                  description: Electric battery total capacity (expressed in Wh). 
                  type: number
                  format: float
                  
                health:
                  type: object
                  properties:
                    capacity:
                      description:  Health related to battery capacity (expressed in percentage).
                      type: number
                      format: int
                            
                    resistance:
                      description:  Health related to battery resistance (expressed in percentage).
                      type: number
                      format: int
    
    Program:
      type: object
      description: Describe recurring action.
      properties:
        recurrence:
            description: | 
                      Determines the recurrence of the program. 
                      * None: means no recurrence. 
                      * Daily: repeated over the week. 
            type: string
            enum: [None, Daily]
            default: Daily
        start:
            type: string
            description: |
                          The program start time formatted using the duration format based on [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals) with the schema: P[n]Y[n]M[n]DT[n]H[n]M[n]S
                      
                          _example_: 
                        
                          * PT14H30M means 14H and 30Min
            example : PT14H30M
        occurence:
                type: object
                description: >
                   The occurrence on the program will spread on days depending on recurrence value.
                properties:
                    day:
                        type: array
                        items:
                          type: string
                          enum: [Mon, Tue, Wed, Thu, Fri, Sat, Sun]
                required: [day]
      required: [start]

    PreconditioningProgram:
      allOf:
        - $ref: '#/components/schemas/Program'
        - title: ProconditionProgram
        - properties:
            slot:
              type: integer
              description: This program number.
              minimum: 1
              maximum: 4
            enabled:
                type: boolean
                description: > 
                          Determines whether this program is enabled or not.
        - required: [enabled, recurrence, occurence]
        
    Preconditioning:
      type: object
      description: Preconditioning the vehicle for driver and passenger.
      properties:
        airConditioning:
          type : object
          properties:
            status:
              description: > 
                The status of the preconditioning feature.
              type: string
              enum: [Enabled, Disabled, Finished, Failure]
            failureCause:
              description: failure cause
              type: string
              enum: [ Defect, DoorOpened, LowBattery, LowFuelLevel, TooManyUnusedProg ]
            programs:
              type: array
              minItems: 1
              maxItems: 4
              items:
                $ref: '#/components/schemas/PreconditioningProgram'
            
             #*  *2018-01-03T12:00:00+01:00/*  known low limit, hight limit = current time.
            
          #  *  *R5/2018-01-03T12:00:00Z/P6H* repeate duration 6H interval for 5 times starting at 2018-01-03T12:00:00Z.  
        
    Trip:
      title: Trip 
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            vehicle:
              $ref: '#/components/schemas/Link'
            waypoints:
              $ref: '#/components/schemas/Link'
            alerts:
              $ref: '#/components/schemas/Link'
            collisions:
              $ref: '#/components/schemas/Link'
        id:
          type: string
          description: Identifier of a trip
        vin:
          $ref: '#/components/schemas/Vin'
        startedAt:
          type: string
          format: date-time
          description: Date & Time when the trip started
        stoppedAt:
          type: string
          format: date-time
          description: Date & Time when the trip stopped
        duration:
          type: string
          description: Duration in seconds of the trip
        distance:
          type: number
          format: float
          description: Distance in km of the trip
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        startPosition:
          $ref: '#/components/schemas/Position'
        stopPosition:
          $ref: '#/components/schemas/Position'
        done:
          description: Determines whether this trip is finished or not.
          type: boolean
        faults:
          description: The faults of this finished or in progress trip. This means that we lacked data from the vehicle to complete the trip description during one of its step (starting, progressing, or finishing).
          type: array
          items:
            type: string
            enum: [Unstarted, DataLacking, Unfinished]
            
    Fleet:
      title: Fleet Information
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            vehicles:
              $ref: '#/components/schemas/Link'
            status:
              $ref: '#/components/schemas/Link'
            maintenances:
              $ref: '#/components/schemas/Link'
            alerts:
              $ref: '#/components/schemas/Link'
            trips:
              $ref: '#/components/schemas/Link'
            monitors:
              $ref: '#/components/schemas/Link'  
            collisions:
              $ref: '#/components/schemas/Link'  
        name:
          description: Name of the Fleet
          type: string
        id:
          description: The id of the Fleet
          type: string  
        description:
          description: The description of the Fleet
          type: string
        createdAt:
          description: Date when the fleet has been created
          type: string
          format: date-time
        updatedAt:
          description: Date when the fleet has been updated
          type: string
          format: date-time
       
    Vehicle:
      title: Vehicle Information
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            fleet:
              $ref: '#/components/schemas/Link'  
            lastPosition:
              $ref: '#/components/schemas/Link'
            trips:
              $ref: '#/components/schemas/Link'
            maintenance:
              $ref: '#/components/schemas/Link'
            alerts:
              $ref: '#/components/schemas/Link'
            status:
              $ref: '#/components/schemas/Link'
            telemetry:
              $ref: '#/components/schemas/Link'
            monitors:
              $ref: '#/components/schemas/Link'
            callbacks:
              $ref: '#/components/schemas/Link'
            collisions:
              $ref: '#/components/schemas/Link'  
        id:
          type: string
        vin:
          description: Serial number of a vehicle
          type: string
        brand:
          description: Brand of a vehicle
          type: string
        pictures:
          description: With the links it's possible to see the pictures of the vehicle 
          type: array
          minItems: 1
          maxItems: 12
          items:
            $ref: '#/components/schemas/Url' 
        createdAt:
          description: Date when the vehicle has been created
          type: string
          format: date-time
        updatedAt:
          description: Date when the vehicle has been updated
          type: string
          format: date-time
    
    VehicleLabel:
        properties:
            label:
                type: string
                description: Version of a vehicle

    CollectionResult:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Tab_Links'
        total:
          type: integer
        totalPage:
          type: integer
        currentPage:
          type: integer
        _embedded:
          type: object
      required: [total, totalPage, currentPage, _embedded]
        
    Fleets:
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - properties:
            _embedded:
              type: object
              properties:
                fleets:
                  type: array
                  items:
                    $ref: '#/components/schemas/Fleet'
                    
    Alerts:
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - properties:
            _embedded:
              type: object
              properties:
                alerts:
                  type: array
                  items:
                    $ref: '#/components/schemas/Alert'
                    
    Monitors:
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - properties:
            _embedded:
              type: object
              properties:
                monitors:
                  type: array
                  items:
                    $ref: '#/components/schemas/Monitor'
                    
    Collisions:
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - properties:
            _embedded:
              type: object
              properties:
                Collisions:
                  type: array
                  items:
                    $ref: '#/components/schemas/Collision'  

    WayPoints:
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - properties:
            _embedded:
              type: object
              properties:
                reduced:
                  description: >
                      Determines whether this result set (page) has been reduced due to path simplifying (by providing a tolerance factor). 
                       ### Note: 
                       The number of results may be lower than the specified page 'size' due to the applying of the path simplifying after resolving the page result set.
                  type: boolean
                  deprecated: true
                positions:
                  type: array
                  items:
                    $ref: '#/components/schemas/Position'
              required:
                  - positions
                        
    Trips:
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - description: List of a Trips response
          properties:
            _links:
              $ref: '#/components/schemas/Tab_Links'
            total:
              type: integer
            totalPage:
              type: integer
            currentPage:
              type: integer
            _embedded:
              type: object
              properties:
                trips:
                  type: array
                  items:
                    $ref: '#/components/schemas/Trip'
                
    MaintenanceList:
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - description: List of a Maintenance response
          properties:
            _embedded:
              type: object
              properties:
                maintenances:
                  type: array
                  items:
                    $ref: '#/components/schemas/Maintenance' 
                
    StatusList:
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - description: List of a Status response
          properties:
            _embedded:
              type: object
              properties:
                status:
                  type: array
                  items:
                    $ref: '#/components/schemas/Status'
                
    Vehicles:
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - title: Vehicle List
          properties:
            _embedded:
              type: object
              properties:
                vehicles:
                  type: array
                  items:
                    $ref: '#/components/schemas/Vehicle'
                    
    
    Attribute:
            type: object
            properties:
              type:
                type: string
                enum: [Header, Body, Query]
                description: |
                  3 attributes type:
                  
                  |Attribute-type|Role|
                  |----------|-------------|
                  |Header|-Will be add as http header extension "x-######:"|
                  |Body|-Will be simply add to event body map attribute (see monitor event definition in template document)|
                  |Query|-Will set as http query parameter when invoking the Webhook|
                  
              key:
                type: string
              value:
                oneOf:
                  - type: string
                  - type: string
                    enum: [vin,monitorID,fleetID]
                    description: |
                      A value  that will be associated with the provided key as is if expressed as literal value or  contextually valued if prefixed with the dollar sign ($).  
                      
                      * Disclaimer: if the var "vin" is used as a query parameter, the batchnotify will be no more possible and each event will be sent through a separated request!.
                      * example: Having a vin=VIN123456, the following attribute set:
                              ```"attributes": [
                                  {
                                    "type": "Header",
                                    "key": "X-vehicle-id"
                                    "value":"$vin"
                                  }
                                ]```
                        will be valued as http header extension: 
                                
                        *"X-vehicle-id: VIN123456"*
            required:
              - key
              - value  
              - type
            example:
              
              type: Header
              key: X-Vehicle_Id
              value: $vin
           
        
    
              
    AttributeSet:          
          type: array
          description: |
            Additional attributes-set as key/value pairs wich will be added to the request when sending the event. It can be used as http header enhancement (such as headers can be used as an authentication parameter when posting the event) or simply added to the notification event body (as set of key/values) or finally as additional query parameters.
          items:
            $ref: '#/components/schemas/Attribute'
            
    Webhook:
      title: Webhook
      description: Defines the webhook for htp notification .
      type: object
      properties:
        target:
          $ref: '#/components/schemas/Url'
        name:
          type: string
          description: Webhook name.
        attributes:
          $ref: '#/components/schemas/AttributeSet'
      required:
        - target
        - name
      example:
        target: https://my.post.callback
        name: My_Webhook
        attributes:
                - type: Header
                  key: X-Vehicle_Id
                  value: $vin
                
    CallbackSubscribe:
      description: Callback subscription parameters.
      type: object
      properties:
        retryPolicy:
          type: object
          description: The retry policy to apply when notification failed.
          required: [policy]
          properties:
            policy:
              type: string
              description: |
                          Defines the retry rules following a notification failure (ie the return code is not HTTP 2XX for  WebHook mode). ```None``` means with a single try, ```Bounded``` with a limited number of tries and ```Always```  with an infinite number of tries. 
              enum: [None, Bounded, Always]
            retryNumber:
                description: Maximum number of attempts (to be used with a retryPolicy set to ```Bounded```).
                type: integer
                default: 3
                minimum: 1
            retryDelay:
                description: Time to wait (expressed in seconds) before retrying to push a notification (ignored if retryPolicy is set to ```None```).
                type: integer
                default: 10
                minimum: 1 
        batchNotify:
                description: |

                  Notification batch of events defined by a time window and batch size. If this field is not set, the callback will post only one event by call.

                    * **At least, the ```size``` parameter should be provided.**
                    * **If the time window is not set then the default value will be applied.**
                type: object
                properties:
                  size:
                    type: number
                    format: int
                    description: Batch size (positive value and not zero).
                  timeWindow:
                    type: number
                    format: int
                    default: 60
                    minimum: 5
                    description: Notification batch window size (expressed in seconds).
                required: [size]
        callback:
          type: object
          properties: 
            webhook:
              $ref: '#/components/schemas/Webhook'
          required: [webhook]
      required: [callback]
      
    MonitorCallbackSubscribe:
      allOf:
        - $ref: '#/components/schemas/CallbackSubscribe'
        - description: Monitor Callback subscription parameters.
          type: object
          properties:
            refreshEvent:
                    description:  Define the period (in sec.) between two refresh events. The refresh-events are sent when the condition of the monitor is satisfied (Trigger -> toggled true). A kind of periodic reminder.
                    type: number
                    format: int
                    minimum: 60

    MonitorStatusSetter:
      title: MonitorStatusSetter
      description: MonitorStatusSetter
      required: [status]
      properties:
          status:
            type: string
            enum: [Running, Paused]
    
    MonitorParameter:
      title: MonitorParameter
      description: MonitorParameter
      properties:
            label:
              type: string
              description: Monitor label (usually its name). 
            subscribeParam:
              $ref: '#/components/schemas/MonitorCallbackSubscribe'
            extendedEventParam:
              type: array
              items:
                 enum: [vehicle.doorsState, vehicle.status, vehicle.maintenance,vehicle.position, vehicle.telemetry, vehicle.alerts, vehicle.collisions]
              description: | 
                            Allow to set extra vehicle data (defined in data model) to add to the monitor event
                            when publishing. The possible values are
                            
                            
                            |value|description|Related model |
                            |----------|:-------------|------:|
                            |vehicle.doorsState|Latest known door state (timestamped) before the eventDate|DoorState|
                            |vehicle.status|Latest known vehicle status (timestamped) before the eventDate|Status|
                            |vehicle.maintenance|Latest known maintenance(timestamped) before the eventDate|Maintenance|
                            |vehicle.position|Last vehicle position (timestamped) before the eventDate|Position|
                            |vehicle.telemetry|Latest known telemetry (timestamped) before the eventDate |Telemetry
                            |vehicle.alerts|List of active alerts at the eventDate|Alert|
                            |vehicle.collisions|Latest known collisions before the eventDate|Collision|

 
            triggerParam:
              description: |
                             Monitor trigger-param that allows to compound triggers by applying a boolean expression to evaluate them.
                             
                             
              properties:
                          
                          timeZoneTriggers: 
                             $ref: '#/components/schemas/TimeZoneTrigger'
                          dataTriggers: 
                            description: | 
                              Compound data triggers (will be evaluated with an AND relationship)
                            type: array
                            items:
                                $ref: '#/components/schemas/DataTrigger'
              required: [triggers,boolExp]
      required: [subscribeParam,triggerParam,label]
    
    MonitorRef: 
      allOf:
        - $ref: '#/components/schemas/TimeStamped'
        - type: object
          description: Monitor creation reference returned when posting a new monitor.
          required: [monitorId, status, createdAt, updatedAt]
          properties:
                updatedAt:
                  type: string
                  format: date-time
                _links:
                    type: object
                    properties:
                      fleet:
                        $ref: '#/components/schemas/Link'
                      monitor:
                        $ref: '#/components/schemas/Link'
                monitorId:
                  $ref: '#/components/schemas/MonitorId'
                status:
                  $ref: '#/components/schemas/MonitorStatus'
                 
    ZoneTrigger:
      title: ZoneTrigger
      description: Zone Alert parameter object
      properties:
            transition:
              description: >-
                Zone monitoring type ('In' for monitoring entering zone and 'Out' for monitoring leaving zone),
              type: string
              enum:
                - In
                - Out
            place:
                    description: >-
                      Circle zone is compound of a center point and a radius.
                    required:
                      - center
                      - radius
                    properties:
                      radius:
                        description: Circle radius (expressed in km)
                        type: number
                        format: int
                      center:
                        type: object
                        properties:
                          longitude:
                            type: number
                            format: double
                          latitude:
                            type: number
                            format: double
                        required: [longitude, latitude]
      required: [place, transition]
      example: 
                        transition: Out
                        place:
                          radius: 20
                          center:
                            longitude: 2.333333
                            latitude:  48.866667
    
    TimeTrigger:
      title: TimeTrigger
      description: Temporal monitor for triggering vehicle moving event within a time interval.
      required: [times]
      properties:
            times:
              type: array
              items:
                $ref: '#/components/schemas/BoundedProgram'
            timeZone: 
              type: string
              pattern: \w?/\w?
              default: Europe/Paris
              description: The standard time [zone code](https://en.wikipedia.org/wiki/List_of_tz_database_time_zones) of the region where to apply this time trigger monitor. 
                  This allows to adapt this trigger to the time change according to local (region/country) criteria/rules.
              example: Europe/Paris
    
    TimeZoneTrigger:
      title: TimeZoneTrigger
      description: |
        Zone & temporal monitor. At least one of the two parameters must be provided. 
        
        Predicates within this compound triggers will be evaluated with an AND relationship.  
      properties:
            zoneTrigger:
                $ref: '#/components/schemas/ZoneTrigger'
            timeTrigger:
              $ref: '#/components/schemas/TimeTrigger'
            
    DataTrigger:
      title: DataTrigger
      description: A monitor for triggering the vehicle data change event.
      properties:
        data:
          description: | 
            The left operand of the trigger function. The following Table details for each operand data its type, the supported operator and the possibly returned value: 
            
            |**Data**|**Type**|**Op**|**Value**|
            |---|---| ---:| ---:|
            | vehicle.alert | List of value | onChange (at least one)/includedIn/equalsTo | Value (ObjetAlert) |
            | vehicle.odometer | Integer | equalsTo/greaterThan/lowerThan/ | Value |
            | vehicle.engines.running (boolean) | Boolean | onChange/equalsTo | Value (true/false) |
            | vehicle.engines.thermic.oil.temp | Integer | equalsTo/greaterThan/ lowerThan/ | Value |
            | vehicle.energy.electric.level | Number | equalsTo/greaterThan/ lowerThan/ | Value |
            | vehicle.energy.electric.autonomy | Number | equalsTo/greaterThan/ lowerThan/ | Value |
            | vehicle.energy.fuel.level | Number | equalsTo/greaterThan/ lowerThan/ | Value |
            | vehicle.energy.fuel.autonomy | Number | equalsTo/greaterThan/ lowerThan/ | Value |
            | vehicle.energy.charging.status | Enum(ChargingStatusEnum) | onChange/equalsTo | Value |
            | vehicle.energy.charging.plugged | Boolean | onChange/equalsTo | Value |
            | vehicle.doorsState.lockedState | N/A | onChange | Value |
            | vehicle.doorsState.opening | N/A | onChange | Value |
            | vehicle.kinetic.moving| Boolean | onChange/equalsTo | Value (true/false) |
            | vehicle.kinetic.speed | Number | equalsTo/greaterThan/ lowerThan/ | Value |
            | vehicle.trip| Literal | onChange| Value(IDTRIP) |
            | vehicle.maintenance.daysBeforeMaintenance, | Number | equalsTo/ greaterThan/ lowerThan/ | Value |
            | vehicle.maintenance.mileageBeforeMaintenance| Number | equalsTo/ greaterThan/ lowerThan/ | Value |
            | vehicle.safety.beltWarning | Enum(beltWarning) | onChange/equalsTo | Value |
            | environment.air.temp | Number | equalsTo/greaterThan/lowerThan/ | Value |
            | privacy.state (DEPRECATED) | Enum(Privacy) | equalsTo / onChange/includedIn | Value |
            | privacy.driverRequestState | Enum(Privacy) | equalsTo / onChange/includedIn | Value |
            | vehicle.drivingBehavior.mode | Enum(drivingBehavior.mode) | equalsTo / onChange/includedIn | Value |  
            | vehicle.collision.side | Enum(collision.side) | equalsTo / includedIn | Value |
            | vehicle.collision.severity | Enum(collision.severity) | equalsTo / includedIn | Value |
            | vehicle.safety.autoECallTriggering | Enum(safety.autoECallTriggering) | equalsTo / onChange/includedIn | Value |

                
                        
            The right operand  (value) argument depends on the type of operation (OP) as following:
              
              * onChange: no value because we are monitoring the change between two states (before and after).
              * includedIn: value must be an array of size> = 1
              * equalsTo, greaterThan and lowerThan: the value must be an array of size = 1.
          type: string
          enum:
            - vehicle.alert
            - vehicle.odometer
            - vehicle.engines.running
            - vehicle.engines.thermic.oil.temp
            - vehicle.energy.electric.level
            - vehicle.energy.electric.autonomy
            - vehicle.energy.fuel.level
            - vehicle.energy.fuel.autonomy
            - vehicle.energy.charging.status
            - vehicle.energy.charging.plugged
            - vehicle.doorsState.lockedState
            - vehicle.doorsState.opening
            - vehicle.kinetic.moving
            - vehicle.kinetic.speed
            - vehicle.trip
            - vehicle.maintenance.daysBeforeMaintenance
            - vehicle.maintenance.mileageBeforeMaintenance
            - vehicle.safety.beltWarning
            - environment.air.temp
            - privacy.state
            - privacy.driverRequestState
            - vehicle.drivingBehavior.mode
            - vehicle.collision.side
            - vehicle.collision.severity
            - vehicle.safety.autoECallTriggering


        op:
            description: The operator of the trigger function.                          
            type: string
            enum: [equalsTo, greaterThan, lowerThan, includedIn, onChange]
        value:
            description: |
              The right operand of the trigger function. It can be a uniq ```value``` or a list of value ```values```. The choice of one or the other depends on ```OP```  which in the case of ```includedIn``` must be a list.
                * _Disclaimer_: If the op field is not set to ```includeIn``` then only the first item will be used.
            type: array
            items:
              type: string
      required: [data,op]
      example:
        data: vehicle.energy.electric.level
        op: greaterThan
        value: ["75"]

    
    
    
     
        
   
        
   
    Url:
      type: string
      description: >-
        URL format follows [RFC 3986](https://tools.ietf.org/html/rfc3986) and
        usually looks like this ` scheme://host[:port][/Path] `
    
    Link:
      type: object
      description: >-
        A Link Object as defined by [JSONHAL#Link Object](https://tools.ietf.org/html/draft-kelly-json-hal-08#section-5).
      required:
        - href
      properties:
        href:
          $ref: '#/components/schemas/Url'
        templated:
          type: boolean
          description: >-
            SHOULD be true when the Link Object's "href" property is an [URI Template](https://tools.ietf.org/html/rfc6570)
        type:
          type: string
          description: >-
            a hint to indicate the media type expected when dereferencing the
            target resource.
        deprecation:
          allOf:
            - $ref: '#/components/schemas/Url'
            - description: >-
                indicates that the link is to be deprecated (i.e. removed) at a
                future date.  Its value is a URL that SHOULD provide further
                information about the deprecation.
        name:
          type: string
        title:
          type: string
          description: >-
            Its value is a string and is intended for labelling the link with a
            human-readable identifier (as defined by
            [RFC5988](https://tools.ietf.org/html/rfc5988)).
        profile:
          type: string
          description: >-
            Its value is a string and is intended for indicating the language of
            the target resource (as defined by [RFC5988]).
        hreflang:
          type: string
          description: >-
            Its value is a string which is a URI that hints about the profile
            (as defined by
            [I-D.wilde-profile-link](https://tools.ietf.org/html/draft-kelly-json-hal-08#ref-I-D.wilde-profile-link))
            of the target resource.
    
    Tab_Links:
      description: >
        [HAL](https://en.wikipedia.org/wiki/Hypertext_Application_Language#Convention)
        (Hypertext Application Language) link collection
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        first:
          $ref: '#/components/schemas/Link'
        next:
          $ref: '#/components/schemas/Link'
        prev:
          $ref: '#/components/schemas/Link'
        last:
          $ref: '#/components/schemas/Link'
          
    ChargingStatusEnum:
      description: status of charging system.
      type: string
      enum:  [Disconnected, InProgress, Failure, Stopped, Finished]
      
    AlertMsgEnum:
      type: string   
      description: MPH alert list 
      enum:
            - AbsBrakingSystemFault    
            - ActiveSpoilerFault    
            - AdBlueFault     
            - AdBlueFaultStartingImpossible   
            - AdBlueFaultStartingImpossibleSoon  
            - AddWasherFluid     
            - AirbagOrSeatBeltPretensionerOrActiveHoodFailure 
            - AssistanceButtonFault    
            - AutomaticBrakingDeactivated   
            - AutomaticHeadlightAdjustmentFault   
            - BatteryChargeOrElectricalCircuitSystemFailure 
            - BrakingSystemFailure    
            - ChargingFailure     
            - CheckTheCenterBrakeLamp    
            - CollisionDetectionSystemFault   
            - CollisionMitigationSystemFault   
            - CoolantLevellow     
            - DrivingAssistanceSensorBlind   
            - ElectricTractionSystemFailureLimitSpeed
            - ElectricTractionSystemFailureStopVehicle
            - ElectricTractionSystemFault
            - ElectronicImmobiliserFault    
            - EmissionSystemOrAdBlueQualityFailueStartingImpossible
            - EmissionSystemOrAdBlueQualityFailueStartingImpossibleSoon
            - EmissionSystemOrAdBlueQualityFailure  
            - EngineFailure     
            - EngineFault
            - EngineMisfiringFuel
            - EngineOilPressureFailure    
            - EngineTemperatureFailure    
            - EspAsrSystemFault     
            - FrontLeftFlashingIndicatorFault   
            - FrontLeftFogLampsFault     
            - FrontLeftParkingLampsFault     
            - FrontRightFlashingIndicatorFault   
            - FrontRightFogLampsFault     
            - FrontRightParkingLampsFault     
            - FuelLevelLow     
            - GearboxFault     
            - HeadlightsFault     
            - InstalledSpareWheelFault   
            - InterVehicleTimeMeasurementFault  
            - LaneChangeAssistanceFault     
            - LaneDepartureWarningSystemFault   
            - LeftBrakeLampFault  
            - LeftFrontDoorOpen     
            - LeftFrontDoorOpenLowSpeed 
            - LeftFrontTirePressurSensorFault   
            - LeftFrontTirePuncture    
            - LeftFrontTireUnderInflated    
            - LeftRearDoorOpen     
            - LeftRearDoorOpenLowSpeed
            - LeftRearTirePressurSensorFault   
            - LeftRearTirePuncture    
            - LeftRearTireUnderInflated    
            - LeftReverseLampFault     
            - OilLevelLow      
            - ParkAssistSystemFault    
            - ParkingBrakeOrHillStartSystemFailure  
            - ParticleFilterAdditiveLevelTooLow   
            - ParticleFilterFull     
            - ParticleFilterRegenerating    
            - PowerSteeringFailure    
            - PowerSteeringFault    
            - PreheatingPreventilationDeactivatedBatteryLow 
            - PreheatingPreventilationDeactivatedClockUnset 
            - PreheatingPreventilationDeactivatedFuelLevelLow 
            - RearLeftFlashingIndicatorFault   
            - RearLeftFogLampsFault     
            - RearLeftParkingLampsFault     
            - RearRightFlashingIndicatorFault   
            - RearRightFogLampsFault     
            - RearRightParkingLampsFault     
            - RearWindowOpen     
            - RearWindowOpenLowSpeed
            - ReplaceBrakePads     
            - ReplaceTheRemoteControlBattery   
            - RetractableRoofMechanismFault   
            - RightBrakeLampFault     
            - RightFrontDoorOpenLowSpeed    
            - RightFrontDoorOpen     
            - RightFrontTirePressurSensorFault  
            - RightFrontTirePuncture    
            - RightFrontTireUnderInflated    
            - RightRearDoorOpen     
            - RightRearDoorOpenLowSpeed 
            - RightRearTirePressurSensorFault   
            - RightRearTirePuncture    
            - RightRearTireUnderInflated    
            - RightReverseLampFault     
            - RiskOfIce     
            - RoofOperationNotPossibleSpeedUnknown
            - RoofOperationNotPossibleTooHighTemp
            - ShiftToPark     
            - SteeringLockFault     
            - SuspensionFault     
            - SuspensionFaultLimitSpeed
            - SuspensionFaultRepaireVehicle
            - TireUnderInflationDetectionSystemFault  
            - TireUnderInflationDetectionSystemFault  
            - TooManyRoofOperation
            - TrailerConnectionFault    
            - TrunkOrHoodOpen     
            - TrunkOrHoodOpenLowSpeed
            - WaterInTheDieselFuelFilter  

        
    BoundedProgram:
      allOf:
        -  $ref: '#/components/schemas/Program'
        - required: [start, duration, occurence]
          description: >
           extended program witch specify action duration. The relative start time (to 0h00). 
           
            # _Note:_ 
              If the selected```recurrence```parameter is set to```None```value then the occurrence paramaeter will be ignored. On the other hand, if this value is equal to```Daily```and the ```occurrence```is not set then it will be considered as all days of the week.
          properties:
            duration:
              description: Duration of the monitor action expressed using [ISO-8601 Duration spec](https://en.wikipedia.org/wiki/ISO_8601#Durations)
              type: string
              example: PT04H30M
            occurence:
                  type: object
                  description: >
                     The occurrence on a bounded program will spread on months, weeks, days depending on recurrence value and ```week``` field.
                  properties:
                      day:
                          type: array
                          minItems: 1
                          maxItems: 7
                          items:
                            type: string
                            enum: [Mon, Tue, Wed, Thu, Fri, Sat, Sun]
                      week:  
                          description:  occurences over the weeks of the year from w1 to w52 specified in an array unitary or grouped by ranges (w1, w2, w34-w46, w52)
                          type: array
                          minItems: 1
                          maxItems: 52
                          items:
                          #week of year : w1, w2 ... w34-w46 ..
                            type: string
                            format: '[wW][1-5][0-9]?(-[wW][1-5][0-9]?)?'
                          example: [w1-w25,w30,w36, w40-w50]
          example:  
            recurrence: Daily
            start: PT8H30M
            duration: PT7H30M
            occurence: [Mon,Tue,Thu, Fri]
                
              
    indexRange:
      type: string
      pattern: \d+-\d*
      default: 0-
      description: >
        Range index  used to express the first (offset) and the last results
        index  to retrieve. With the respect to the regex pattern '\d+(-\d*)?',
        the start of  range is mandatory (use 0 for default).


        *Example:*


        *  '0-9'  : start=0, end=9    ==> offset=0 and number of items=10


        * '5-'    : start =5, no end  ==> start at 5th to the end results.
    
    xError:
      type: object
      description: Detailed error
      properties:
        code:
          type: integer
        uuid:
          type: string
        message:
          type: string
        timestamp:
          type: string
      example:
        code: 40499
        uuid: 494f61d1-472a-4696-ac3c-2961496c3aaf
        message: No data availble for such context.
        timestamp: '2020-01-01T00:00:00.000Z'
        
    EngineLiquid:
                              type: object
                              properties:
                                level:
                                  description: Engine liquid level expressed in persent.
                                  type: number
                                  format: int
                                temp:
                                  description: Engine liquid temperature expressed in Celsius degrees.
                                  type: number
                                  format: float
    Engine:
          type: object
          properties:
                  type:
                          type: string
                          default: Thermic
                          enum:
                            - Thermic
                            - Electric
                  oil:
                    type: object 
                    deprecated: true
                    description: deprecated, use extention thermic for such purpose.
                    properties:
                      temp:
                        type: number
                        format: float
                  speed:
                    type: number
                    description: Engine's speed in RPM
                    format: float
                  gmpStatus:
                    type: string
                    enum: [NotRunning, Starting, Running, Stopping, Stopped]
                  extension:
                    type: object
                    properties:
                        thermic:
                          type: object
                          properties:
                            coolant:
                              allOf:
                                - description: Engine coolant liquid properties.
                                - $ref: '#/components/schemas/EngineLiquid'
                            oil:
                              allOf:
                                - description: Engine oil properties.
                                - $ref: '#/components/schemas/EngineLiquid'
                            scr:
                                description: Selective catalytic reduction (SCR) system warning level.
                                type: string
                                enum: [ Off, Blinked, On]    
                 
    Telemetry:
      type: object
      properties:
        _links:
          type: object
          properties:
            self:
              $ref: '#/components/schemas/Link'
            vehicle:
              $ref: '#/components/schemas/Link'
            trip:
              $ref: '#/components/schemas/Link'
        
       
        privacy:
          $ref: '#/components/schemas/Privacy'
        vehicle:
          type: object
          properties:
            engines:
              type: array
              items:
                $ref: '#/components/schemas/Engine'
                            #groupe motopropulseur
            energies:  
                type: array
                items:
                  $ref: '#/components/schemas/Energy'
            transmission:
              $ref: '#/components/schemas/Transmission'
            adas:
              $ref: '#/components/schemas/Adas'
            lighting:
              $ref: '#/components/schemas/Lighting'
            ignition:
               $ref: '#/components/schemas/Ignition'
              ##### LEV CHANGE HERE
            doorsState:
              $ref: '#/components/schemas/DoorsState'  
            battery:
              $ref: '#/components/schemas/Battery'
            safety:  
                type: object
                properties:
                  beltWarning:
                    type: string
                    enum: [Normal, Omission]
                  eCallTriggeringRequest:
                    deprecated: true
                    type: string
                    enum: [AirbagUnabled, NoRequest, Requested]        
                  autoECallTriggering:
                    type: string
                    enum: [NotDetected, Detected] 

            odometer: 
                type: object
                properties:
                  mileage:
                        description: Vehicle mileage expressed in KM.
                        type: number
                        format: float
            kinetic :
                  $ref: '#/components/schemas/BasicKinetic'
            drivingBehavior:
              description: Describe the behavior of the driver
              $ref: '#/components/schemas/DrivingBehaviorBase'
        environment:
          $ref: '#/components/schemas/Environment'
         
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        _embedded:
          type: object
          properties:
            extension:
               $ref: '#/components/schemas/TelemetryExtension'
    
    Telemetries:
      allOf:
        - $ref: '#/components/schemas/CollectionResult'
        - properties:
            _embedded:
              type: object
              properties:
                telemetries:
                  type: array
                  items:
                    $ref: '#/components/schemas/Telemetry'
            
    TelemetryExtensionType:
      type: array
      minItems: 1
      maxItems: 4
      items:
        type: string
        enum:
          - location
          - maintenance
          - odometer
          - kinetic
          
    StatusExtensionType:
      type: array
      minItems: 1
      maxItems: 2
      items:
        type: string
        enum:
          - odometer
          - kinetic
          
    Extension:
      type: object
      description: Additional data set.
      properties:
        odometer:
          $ref: '#/components/schemas/VehicleOdometer'
        kinetic:
          $ref: '#/components/schemas/Kinetic'
    
    TelemetryExtension:
        allOf:
          - description: Additional data set for telemetry.  
          - properties:
                odometer: 
                    type: object
                    properties:
                      mileage:
                            description: Vehicle mileage expressed in KM.
                            type: number
                            format: float
                kinetic :
                      $ref: '#/components/schemas/BasicKinetic'
                location:
                      $ref: '#/components/schemas/Position'
                maintenance:
                       $ref: '#/components/schemas/MaintenanceObj'                
                     
    
    
    BasicKinetic:
            description: |
                          Everything related to the movement of the vehicle. Speed, acceleration..
            properties:
                acceleration:
                  type: number
                  format: float
                  description:  Vehicle acceleration (expressed in m/s²)
                speed:
                  type: number
                  format: float
                  description:  Vehicle speed (expressed in km/h)
                pace:
                  description:  Vehicle estimated distance (expressed in m)
                  type: number
                  format: float
                moving:
                  type: boolean 
    
    Kinetic:
        allOf:
            - properties:
                createdAt:
                      type: string
                      format: date-time
            - $ref: '#/components/schemas/BasicKinetic'
         
                  
    DrivingBehaviorBase:
        type: object
        properties:
            mode:
                description : Driving mode by driver selection
                type : string
                enum:
                    - Normal
                    - Sport
                    - Confort
                    - Eco
                    - Sand
                    - Mud
                    - Snow
                    - ZEV
                    - Hybrid
                    - ZEVEco
                    - HybridEco
                    - EcoPlus
                    - eAWD
                    - 4AWD
                    - ReinforcedLoad
    
    Transmission:
              type: object
              properties:
                gearbox:
                  type: object
                  properties:
                    gear:
                      type: object
                      properties:
                        recommended:
                          type: string
                          enum:
                            - None
                            - Up
                            - Down
                            - UpDown
                    mode:
                      type: object
                      properties:
                        automatic:
                          type: boolean
                        sequential:
                          type: boolean
                        sport:
                          type: boolean
                        snow:
                          type: boolean
    
    Adas:  
                type: object
                properties:
                  parkAssist:
                    type: object
                    properties:
                      front:
                        type: array
                        items:
                          type: string
                          enum:
                            - Fault
                            - DriverInhibition
                            - Active
                            - Wait
                            - OutOfService 
                      rear:
                        type: array
                        items:
                          type: string
                          enum:
                            - Fault
                            - DriverInhibition
                            - Active
                            - Wait
                            - OutOfService 
                  accr:
                    description: Adaptive Cruise Control Regulation
                    type: string
                    enum:
                      - Activated
                      - Fault
                      - Hold
                      - HoldWithOverSpeeding
                      - Off
                      - OverSpeedingByPedalPess
                      - StandBy
                  lvv:
                    type: boolean
                  rvv:
                    type: string
                    enum:
                      - Off
                      - Inactive
                      - Active
                      - SpeedExceeded
                      - Disabled
                      - DisabledBySystem
                      - MaxSpeedExceed
                      - SpeedDeltaExceed
                      - ReducedVisibility
                      - Learning
                  aebs:
                    description: Advanced Emergency Braking System
                    type: string
                    enum:
                      - Off
                      - Fixed
                      - OnFlashing
                  afil:
                    description: Lane Departure Warning System
                    type: string
                    enum: [FlashingFault, FlashingWarning, Off, OnFixed]
                  artiv:
                    description: Respect of inter vehicle time assist (ARTIV)
                    type: string
                    enum:
                      - NotSelected
                      - Selected
                      - Unavailable
                    default: Unavailable
                  bsm:
                    description: Blink SpotMonitoring
                    type: string
                    enum:
                      - Active
                      - Inactive
                      - Disabled
                      - Fault
                  esp:
                    description: Electronic Stability Programme
                    type: boolean
                  abs:
                    description: Anti-lock braking system
                    type: boolean
                  fse:
                    description: Electric brake service
                    type: boolean
                  sli:
                    description: Speed Limit Information
                    type: integer
                  rlka:
                    description: Lane Keeping Assist right
                    type: string
                    enum: [Authorized, CorrectionInProgress, NotAuthorized, NotSelected]
                  lrka:
                    description: Lane Keeping Assist left
                    type: string
                    enum: [Authorized, CorrectionInProgress, NotAuthorized, NotSelected]
         
    Lighting:  
                type: object
                properties:
                  turn:
                    type: array
                    items:
                      type: string
                      enum: [Left, Right]
                  light:
                    type: array
                    items:
                      type: string
                      enum: [Front, Rear]
    
    Environment:
            type: object
            properties:
              luminosity:
                type: object
                properties:
                  day:
                    type: boolean
              air:
                type: object
                description: Outside air temperature in Celsius degrees
                properties:
                  temp:
                    type: number
                    format: float
    
    TelemetryEnum:
      type: array
      minItems: 1
      maxItems: 10
      items:
        type: string
        enum:
          - environment
          - privacy
          - vehicle
          - vehicle.adas
          - vehicle.battery
          - vehicle.doorsState
          - vehicle.energies
          - vehicle.engines
          - vehicle.ignition
          - vehicle.lighting
          - vehicle.safety
          - vehicle.transmission
          - vehicle.drivingBehavior
    
    UpdatedAtField:
      type: object
      properties:
       updatedAt:
          description: Date when the resource has been updated.
          type: string
          format: date-time
    CreatedAtField:
      type: object
      properties:
          createdAt:
            description: Date when the resource has been created.
            type: string
            format: date-time 

    CollisionDetails:
        type : object
        properties:
          side:
            type: string
            description: >-
                Indicates the side of the collision
            enum: [Front, Rear, Lateral]
          severity:
            type: string
            enum: [Minimal, Minor, Major]
            description: >-
                Minimal stands for no emergency system activated during the collision.
                Minor only pretensioner system activated.
                Major for airbag and prentensioner activation.
                    
    InfoCollision:
      type: string
      enum: [ NoCrash, CrashDetected]

    CollisionObj:
     allOf:
        - title: Collision
          type: object
          properties:
            details:
                type : array
                items : 
                  $ref: '#/components/schemas/CollisionDetails'


    Collision:
     allOf:
        - $ref: '#/components/schemas/CreatedAtField'
        - $ref: '#/components/schemas/CollisionObj'
        - title: Collision
          type: object
          properties:
            id:
              type: string
            vin:
              $ref: '#/components/schemas/Vin'
            updatedAt:
              type: string
              format: date-time
            tippedOver:
              type: boolean
              description: >-
                    Indicates if the car tipped over during the collision.
                    Warning : This information is applicable only on vehicles equipped with dedicated sensor and is optionnal
            pedestrian:
              type: boolean
              description: >-
                Indicates if the collision involve a pedestrian.
                Warning : This information is applicable only on vehicles equipped with dedicated sensor and is optionnal
            _links:
              type: object
              properties:
                self:
                  $ref: '#/components/schemas/Link'
                vehicle:
                  $ref: '#/components/schemas/Link'
                trip:
                  $ref: '#/components/schemas/Link'
          required: [ id ]

  ############################ PARAMETERS ################################        
  parameters:  
    fleetId:
      name: fid
      in: path
      description: Resource is related to this fleet ID only.
      required: true
      schema:
        type: string
   
    alertId:
      name: aid
      in: path
      description: id of the alert.
      required: true
      schema:
        type: string
    
    monitorId:
      name: mid
      in: path
      description: id of the monitor.
      required: true
      schema:
        type: string
  
    vehicleId:
      name: vid
      in: path
      description: Resource is related to this Vehicle ID only.
      required: true
      schema:
        type: string
    
    vinPrefix:
      name: vinPrefix
      in: query
      description: Allows filtering on VINs that start with the same prefix.
      schema:
        type: string    
     
    tripId:
      name: tid
      in: path
      required: true
      description: The ID {tid} of Trip
      schema:
        type: string
    
    locale:
      name: locale
      in: query
      description: >-
       Locale is used for rendering text according to language and country for. It should match the  REGEX \w(-\w)?. For more details about possible standard values, please refer to [locals list](https://en.wikipedia.org/wiki/Language_localisation).
      required: false
      schema:
        type: string
    
    timestamps:
      name: timestamps
      in: query
      description: >-
        Array of **"Times range"**. Results will contain results whose
        timestamps are included in those date-time ranges (see **timestamp**
        data  model).**"timestamp"** items should be expressed as in
        '[RFC3339](https://www.ietf.org/rfc/rfc3339.txt)'.
                
        Times range is the time intervening between two times. The range can be
        expressed by two times Points (start and end *Timestamp*s) or by a start
        *Timestamp* Point and a *Duration* . All of
        them  should be expressed using the 
        [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) and the interval format
        is based on [ISO8601](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals):
        
        - 'T1/T2' interval time from low limit T1 to hight T2
        
        - 'T1/D' interval time from low limit T1 with duration = D ( T2=T1+D)
        
        - 'T/' endless range, known start Timestamp but no end Timestamp. The current time  will be used as the high time limit.
        
        - '/T' startless range, known end date but no start date. No lower limit will be used to retrieve results.
        
        - T is a timestamp and D is a duration  as defined in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt). Example: 
          - *2018-01-01T09:00:00+01:00/2018-01-01T12:00:00+01:00* known low and hight limits.
          - *2018-01-03T12:00:00+01:00/P3Y6M4DT12H30M5S*  known low limit, hight limit = start + duration.
          - *2018-01-03T12:00:00+01:00/*  known low limit, hight limit = current time.
      required: false
      schema:
        type: array
        minItems: 1
        maxItems: 10
        items:
          type: string
          pattern: \w?/\w?
         # description: >
    
    pageSize:
      name: pageSize
      in: query
      schema:
        type: number
        format: int
        default: 60
        maximum: 60
        minimum: 1
      required: false
      description: >-
        The maximum number of results (for a collection results response) to
        return per page. When not set, at most 60 results will be returned. 
        The range for this parameter is [1...60]
        
    pageSizeHighFrequency:
      name: pageSize
      in: query
      schema:
        type: number
        format: int
        minimum: 1
        maximum: 2000
        default: 60
      required: false
      description: >-
        The maximum number of results (for a collection results response) to
        return per page for high frequency data upload. When not set, at most 60 results will be returned.
        The range for this parameter is [1...2000]
    
    pageToken:
      name: pageToken
      in: query
      schema:
        type: string
      required: false
      description: >-
        Start-Page marker, this token is used (by the backend) for continuing serving from the previous results page to the next one. (_Disclaimer_:  **It is built and used only by the server**).
    
    indexRange:
      name: indexRange
      in: query
      schema:
        $ref: '#/components/schemas/indexRange'
      required: false
      description: >-
        Results indexes will be included in this range (see **indexRange**
        model).
          
          default: 0-

          example: 0-, 0-5
    
    tolerence:
      name: tolerance
      description: >
          Tolerance factor is expressed in length km unit and is used to simplify path by reducing the total number of points by is using Douglas-Peucker algorithm to find a similar curve with fewer points (find more info here: [Ramer_Douglas_Peucker_algorithm](https://en.wikipedia.org/wiki/Ramer%E2%80%93Douglas%E2%80%93Peucker_algorithm#Algorithm) ).
      in: query
      schema:
        type: number
        format: float
        
    telemetryType:
      name: type
      in: query
      description: >-
        Results will only contain Telemetry messages of this kind. You can add
        more than one message type. By default, if no type is selected then all telemetries will be taken ```(the number of elements in this array must be between 1 and 10)```.
      required: false
      schema:
        $ref: '#/components/schemas/TelemetryEnum'
        
    statusExtension: 
      name: extension
      in: query
      description: >-
        Additional data set that will be included in embedded field 
        
         * _Disclaimer_:  ** ```odometer``` and ```kinetic``` are deprecated here and move inside status object**
      required: false
      deprecated: true
      schema:
        $ref: '#/components/schemas/StatusExtensionType'  
    
    collisionId:
      name: cid
      in: path
      description: Results will only contain the Collision related to this Collision ID.
      required: true
      schema:
        type: string
    
    telemetryExtension:
      name: extension
      in: query
      description: >-
        Additional data set that will be included in embedded field```(the number of elements in this array must be between 1 and 4)```.
        
        * _Disclaimer_:  ** ```odometer``` and ```kinetic``` are deprecated here and move inside telemetry object**
      required: false
      schema:
        $ref: '#/components/schemas/TelemetryExtensionType'    
    
 
  #TelemetryExtensionType
  responses:
    AlertsuccessResponse:
      description: Alert response
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Alert'
            
    FleetSuccessResponse:
      description: Fleet response
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Fleet'
    
    FleetsSuccessResponse:
      description: Fleet list response
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Fleets'        
    
    AlertsuccessResponses:
      description: A list of alert
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Alerts'
    
    AlertFailedResponse:
      description: Alert request error
      $ref: '#/x-fragment/general_error_fragment'
      
    CollisionsuccessResponse:
      description: Collision response
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Collision'

    CollisionsSuccessResponse:
      description: A list of Collision
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Collisions'

    CollisionFailedResponse:
      description: Collision request error
      $ref: '#/x-fragment/general_error_fragment'

    
    #MonitorId  
    MonitorsuccessResponse:
      description: Monitor response
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Monitor'
    
    MonitorsuccessStatusResponse:
      description: Monitor response
      content:
        application/hal+json:
          schema:
            type: object
            properties:
              _links:
                type: object
                properties:
                  self:
                    $ref: '#/components/schemas/Link'
                  fleet:
                    $ref: '#/components/schemas/Link'  
                  monitor:
                    $ref: '#/components/schemas/Link'
                 
              status:
                $ref: '#/components/schemas/MonitorStatus'        
    
    MonitorsuccessPostResponse:
      description: Monitor created or updated successfully
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/MonitorRef'        
    
    MonitorsuccessResponses:
      description: A list of Monitors
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Monitors'
    
    MonitorFailedResponse:
      description: Monitor request error
      $ref: '#/x-fragment/general_error_fragment'
      
      
  
      
    TripsuccessResponse:
      description: Trip response
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Trip'
    
    TripsSuccessResponses:
      description: A list of Trip
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Trips'
            
    StatusSuccessResponses:
      description: A list of Status
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/StatusList' 
            
    MaintenanceSuccessResponses:
      description: A list of vehicle maintenance
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/MaintenanceList'             
            
    TripFailedResponse:
      description: Trip request error
      $ref: '#/x-fragment/general_error_fragment'
    
    ECoaching200ErroResponse:
      description: ECoaching response
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/ECoaching'
    
    ECoachingFailedResponse:
      description: ECoaching request error
      $ref: '#/x-fragment/general_error_fragment'
    
    TelemetrySuccessResponse:
      description: Telemetry response
      content:
        application/hal+json:
          schema:
            $ref: '#/components/schemas/Telemetries'
    
    TelemetryFailedResponse:
       $ref: '#/x-fragment/general_error_fragment'

x-fragment:
  general_error_fragment:
    content:
      application/json:
        schema:
          $ref: '#/components/schemas/xError'
