openapi: 3.0.0
servers:
  - url: 'https://client.base.uri/root'
info:
  version: '2.0'
  title: Groupe PSA Connected Car API
  description: | 
              # <<*Monitor Webhook template*>>

              # Introduction

                
                This is the description of the *Groupe PSA Connected Car V2 API*. The
                speccification is  is based on **OpenAPI Specification version 3** and can
                be displayed via [ReDoc](https://github.com/Rebilly/ReDoc)a or
                [Swagger](http://swagger.io).
                 The REST API allows  applications to fetch data from the connected Vehicles data  platform.
               .
              # Authentication
                TBD.

    
  license:
    name: Groupe PSA Licence
    url: 'https://www.psa-peugeot-citroen.com/'
tags:
  - name: Webhook
    description: Monitor webhook model.
 
paths:

  '/monitors/webhook':
    post:
      tags:
        - Webhook
      summary: Post a list of monitor events.
      description: |
                    Post a a list of avent raised by a a registered monitor.
      operationId: set
      parameters:
        - $ref: '#/components/parameters/headerAttribute'
      requestBody:
        content:
          application/json:
            schema:
                $ref: '#/components/schemas/MonitorEvents'
      responses:
        201:
         description: Post Ok.
        default:
          $ref: '#/components/responses/PostErrorResponse'

 
components:
  securitySchemes:
    basicAuth:     # <-- arbitrary name for the security scheme
      type: http
      scheme: basic
  schemas:
    Attributes:
          type: array
          description: >-
            Additional attribute set that was defined when registering the monitor (a set of key / values)
          items:
            type: object
            properties:
              key:
                type: string
              value:
                type: string
            required:
              - key
              - value  
   
  
    MonitorId:
      type: string
      description: The identifier of monitor that raised the event.
      
    MonitorEvents:
      title: MonitorEvents
      description: Monitor event list. This list will contain only one item when the batch-notify (see Monitor API) is not set.
      type: object
      properties:
        monitorId:
           $ref: '#/components/schemas/MonitorId'
        attributes:   
            $ref: '#/components/schemas/Attributes'
       
        events:
              type: array
              items:
                $ref: '#/components/schemas/MonitorEvent'
    
    MonitorEvent:
      title: MonitorEvent
      type: object
      properties:
      
        vin:
          description: Vehicle identifier for which the event was raised.
          type: string  
        eventDate:
          description: The date on which the event was raised..
          type: string
          format: dateTime
       # position:
        #  $ref: '#/components/schemas/Position'
       
        values:
          type: array
          description: Values that caused the trigger. If subscribed monitor trigger is not a compound one then the array will contain only one item.
          items:
            type: object
            description: Values pairs that caused the event.
            properties:
              data:
                  type: string
                  enum:
                    - vehicle.alert
                    - vehicle.odometer
                    - vehicle.engines.running
                    - vehicle.engines.thermic.oil.temp
                    - vehicle.energy.electric.level
                    - vehicle.energy.fuel.level
                    - vehicle.energy.fuel.autonomy
                    - vehicle.autonomy
                    - vehicle.energy.charging.status
                    - vehicle.energy.charging.plugged
                    - vehicle.doorsState.lockedState
                    - vehicle.doorsState.opening
                    - vehicle.kinetic.moving
                    - vehicle.kinetic.speed
                    - vehicle.trip
                    - vehicle.maintenance.daysBeforeMaintenance
                    - vehicle.maintenance.mileageBeforeMaintenance
                    - vehicle.safety.beltWarning
                    - environment.air.temp
                    - privacy.status
                
                  description: The monitored data (operand of a trigger).
              value: 
                description: Values that caused the trigger. Could be a list of data values in case of 'includedIn' operation is used
                type: object
                properties:
                      type:
                        type: string
                        enum: [string, obj.alert]
                      body:
                        type: object
                        properties:
                        
                          literalValue :
                            type: string
                            description: a literal representation of the primitive data value. The client application should be aware of that and should convert it regarding the trigger data type.  
                          objectValues:
                            type: array 
                            items:
                              type: object
                              description: For this object schema definition (based on the type of field), refere to the API Spec definition.
                    
        extensions:
          description: Defines the extra vehicle data as specified in the monitor extended eventparam file (see Monitor paramaeter objecrt definition in the API Spec)
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                description: Speficies the data type of body items. 
                enum: [vehicle.doorsState, vehicle.status, vehicle.maintenance,vehicle.position, vehicle.telemetry, vehicle.alerts]
              body:
                type: array
                description: 
                  Extended data can be expressed as a list of objects because in some case, a vehicle data state should be expressed as a list of value (such as active alerts at a given time). In this spec, those data are expressed as generic object and the type is provided (see type field) and so  the client application should be aware of that and should convert it regarding this data type.
                items:
                  type: object
                  properties:
                    doorState:
                      type: object
                    status:
                      type: object
                    maintenance:
                      type: object
                    position:
                      type: object  
                    telemetry:
                      type: object
                    alert:
                        type: object
                  
        
        refresh:
          description: |
              Indicates whether the event is a refresh (reminder) one or not.
              * ```false``` means entering the context of the trigger (1st time the trigger evaluated true). 
              * ```true```means that is it a reminder event (already within trigger satisfied context).
          type: boolean

    xError:
      type: object
      description: Detailed error
      properties:
        code:
          description: The application error code (do not confuse with http response code which is handled in http headed)
          type: integer
        debug:
          description: To investigate potential mismatches (such as the soft version or component name..). 
          type: string
        message:
          description: A human-readable error message.
          type: string
      example:
        code: 1001
        debug: CMP_001234
        message: Not able to process the post.
        
   

  ########################### RESPONSES
  
  
  responses:
    PostErrorResponse:
      description: Post event error
      content:
       application/json:
        schema:
          $ref: '#/components/schemas/xError'     
          
          
          
          ################### PARMS
          
          
          
  parameters:
    headerAttribute:
      name: <attribute-key> 
      description: |
         An attribute key as specified in the registered monitor additional attributes set that can be used as http header (_can also be used as an **Authorization** parameter specified by the registerer_). The provided attribute value is also set when calling this api. 
         
         **Note**:  This parameter is repeated as many times as attributes in the attribute-set declared when registring of the monitor.
      in: header
      required: true
      schema:
        type: string
        
    tokenAuth:
      name: authorization
      description: >-
        HTTP token authentication (Bearer authentication) that should be
        retrived using PSA connection API.
      in: header
      required: true
      schema:
        type: string
        pattern: Bearer (\w|-|=)*

 
  
    
   
  
    
